{
	"info": {
		"_postman_id": "e8f1de33-b755-4e56-93bd-8b31621616c7",
		"name": "Ski Tour Log API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18562649"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "{{base_url}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {},
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}",
							"host": [
								"{{base_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"User.data.username is ellen\"] = jsonData.user.data.username === \"ellen\";\r",
									"pm.collectionVariables.set(\"user_id\", jsonData.user.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"ellen\",\r\n    \"password\": \"mypassword\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/register - Other user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"other_user_id\", jsonData.user.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"ellinor\",\r\n    \"password\": \"mypassword\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/register - Duplicate username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"ellen\",\r\n    \"password\": \"mypassword\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/register - Invalid username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"1ellen\",\r\n    \"password\": \"mypassword\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/register - Invalid password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"ellen\",\r\n    \"password\": \"password\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/login - Invalid username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"ellennn\",\r\n    \"password\": \"mypassword\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/login - Invalid password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"ellen\",\r\n    \"password\": \"notmypassword\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Body contains accessToken\"] = \"accessToken\" in jsonData === true;\r",
									"\r",
									"pm.collectionVariables.set(\"access_token\", jsonData.accessToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"ellen\",\r\n    \"password\": \"mypassword\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/login - Other user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Body contains accessToken\"] = \"accessToken\" in jsonData === true;\r",
									"\r",
									"pm.collectionVariables.set(\"access_token_other_user\", jsonData.accessToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"ellinor\",\r\n    \"password\": \"mypassword\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user - Not authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user?page-size=3&page-start-index=0",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user?page-size=3&page-start-index=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "page-size",
									"value": "3"
								},
								{
									"key": "page-start-index",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"User id is the same in the response as in the request\"] = jsonData.user.data.id === pm.collectionVariables.get(\"user_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{other_user_id}} - Other user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"User id is the same in the response as in the request\"] = jsonData.user.data.id === pm.collectionVariables.get(\"other_user_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{other_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{other_user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}} - Not authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}} - Not authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"EllenNu\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{other_user_id}} - Not authorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"EllenNu\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{other_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{other_user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"User id is the same in the response as in the request\"] = jsonData.user.data.id === pm.collectionVariables.get(\"user_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"EllenNu\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}} - Not authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"Ellen\",\r\n    \"password\": \"mypassword\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{other_user_id}} - Not authorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"Ellen\",\r\n    \"password\": \"mypassword\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{other_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{other_user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}} - Missing password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"Ellen\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}user/{{user_id}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"User id is the same in the response as in the request\"] = jsonData.user.data.id === pm.collectionVariables.get(\"user_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"Ellen\",\r\n    \"password\": \"mypassword\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tour",
			"item": [
				{
					"name": "{{base_url}}/user/{{user_id}}/tour",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"tour_id\", jsonData.tour.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"date\": \"2023-03-30T07:07:30+0000\",\r\n    \"duration\": 2,\r\n    \"distance\": 20,\r\n    \"temperature\": -4,\r\n    \"wax\": \"V30 Swix Blue\",\r\n    \"glide\": 5,\r\n    \"grip\": 1,\r\n    \"description\": \"Wonderful tour!\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/tour",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"tour"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{other_user_id}}/tour - Other user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"other_tour_id\", jsonData.tour.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token_other_user}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"date\": \"2023-03-25T07:07:30+0000\",\r\n    \"duration\": 1,\r\n    \"distance\": 10,\r\n    \"temperature\": -10,\r\n    \"wax\": \"V30 Swix Blue\",\r\n    \"glide\": 5,\r\n    \"grip\": 3,\r\n    \"description\": \"Cold but refreshing, tired legs\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{other_user_id}}/tour",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{other_user_id}}",
								"tour"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/tour - Not authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"date\": \"2023-03-30T07:07:30+0000\",\r\n    \"duration\": 2,\r\n    \"distance\": 20,\r\n    \"temperature\": -4,\r\n    \"wax\": \"V30 Swix Blue\",\r\n    \"glide\": 5,\r\n    \"grip\": 1,\r\n    \"description\": \"Wonderful tour!\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/tour",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"tour"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{other_user_id}}/tour - Not authorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"date\": \"2023-03-30T07:07:30+0000\",\r\n    \"duration\": 2,\r\n    \"distance\": 20,\r\n    \"temperature\": -4,\r\n    \"wax\": \"V30 Swix Blue\",\r\n    \"glide\": 5,\r\n    \"grip\": 1,\r\n    \"description\": \"Wonderful tour!\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{other_user_id}}/tour",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{other_user_id}}",
								"tour"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/tour - Invalid date format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"date\": \"hello\",\r\n    \"duration\": 2,\r\n    \"distance\": 20,\r\n    \"temperature\": -4,\r\n    \"wax\": \"V30 Swix Blue\",\r\n    \"glide\": 5,\r\n    \"grip\": 1,\r\n    \"description\": \"Wonderful tour!\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/tour",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"tour"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/tour",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/tour",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"tour"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{other_user_id}}/tour - Other user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{other_user_id}}/tour",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{other_user_id}}",
								"tour"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/tour - Not authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/tour",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"tour"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/tour?page-size=3&page-start-index=0",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/tour?page-size=3&page-start-index=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"tour"
							],
							"query": [
								{
									"key": "page-size",
									"value": "3"
								},
								{
									"key": "page-start-index",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/tour/{{tour_id}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Tour id is the same in the response as in the request\"] = jsonData.tour.data.id === pm.collectionVariables.get(\"tour_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/tour/{{tour_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"tour",
								"{{tour_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{other_user_id}}/tour/{{other_tour_id}} - Other user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Tour id is the same in the response as in the request\"] = jsonData.tour.data.id === pm.collectionVariables.get(\"other_tour_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/user/{{other_user_id}}/tour/{{other_tour_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{other_user_id}}",
								"tour",
								"{{other_tour_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/tour/{{tour_id}} - Not authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/tour/{{tour_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"tour",
								"{{tour_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/tour/{{tour_id}} - Not authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Lovely weather, felt strong\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/tour/{{tour_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"tour",
								"{{tour_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{other_user_id}}/tour/{{other_tour_id}} - Not authorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Lovely weather, felt strong\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{other_user_id}}/tour/{{other_tour_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{other_user_id}}",
								"tour",
								"{{other_tour_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/tour/{{tour_id}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"Description must have changed to new value\"] = jsonData.tour.data.description === \"Lovely weather\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Lovely weather\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/tour/{{tour_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"tour",
								"{{tour_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/tour/{{tour_id}} - Not authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"date\": \"2023-03-30T07:07:30+0000\",\r\n    \"duration\": 2,\r\n    \"distance\": 20,\r\n    \"temperature\": -4,\r\n    \"wax\": \"V30 Swix Blue\",\r\n    \"glide\": 5,\r\n    \"grip\": 1,\r\n    \"description\": \"Wonderful tour!\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/tour/{{tour_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"tour",
								"{{tour_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{other_user_id}}/tour/{{other_tour_id}} - Not authorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Lovely weather, felt strong\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{other_user_id}}/tour/{{other_tour_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{other_user_id}}",
								"tour",
								"{{other_tour_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/tour/{{tour_id}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"Description must have changed to new value\"] = jsonData.tour.data.description === \"Wonderful tour!\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"date\": \"2023-03-30T07:07:30+0000\",\r\n    \"duration\": 2,\r\n    \"distance\": 20,\r\n    \"temperature\": -4,\r\n    \"wax\": \"V30 Swix Blue\",\r\n    \"glide\": 5,\r\n    \"grip\": 1,\r\n    \"description\": \"Wonderful tour!\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/tour/{{tour_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"tour",
								"{{tour_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/tour/{{tour_id}} - Not authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/tour/{{tour_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"tour",
								"{{tour_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{other_user_id}}/tour/{{other_tour_id}} - Not authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{other_user_id}}/tour/{{other_tour_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{other_user_id}}",
								"tour",
								"{{other_tour_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/tour/{{tour_id}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/tour/{{tour_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"tour",
								"{{tour_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/tour/{{tour_id}} - Not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/tour/{{tour_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"tour",
								"{{tour_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Webhook",
			"item": [
				{
					"name": "{{base_url}}/user/{{user_id}}/webhook - Not authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"endpoint\": \"https://webhook-subscriber-endpoint.com\",\r\n    \"token\": \"123abc\",\r\n    \"user\": true,\r\n    \"tour\": true\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/webhook",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{other_user_id}}/webhook - Not authorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"endpoint\": \"https://webhook-subscriber-endpoint.com\",\r\n    \"token\": \"123abc\",\r\n    \"user\": true,\r\n    \"tour\": true\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{other_user_id}}/webhook",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{other_user_id}}",
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/webhook",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"webhook_id\", jsonData.webhook.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"endpoint\": \"https://webhook-subscriber-endpoint.com\",\r\n    \"token\": \"123abc\",\r\n    \"user\": true,\r\n    \"tour\": true\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/webhook",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{other_user_id}}/webhook - Other user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"other_webhook_id\", jsonData.webhook.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token_other_user}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"endpoint\": \"https://webhook-subscriber-endpoint.com\",\r\n    \"token\": \"123abc\",\r\n    \"user\": true,\r\n    \"tour\": true\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{other_user_id}}/webhook",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{other_user_id}}",
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/webhook - No authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/webhook",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{other_user_id}}/webhook - No authorization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{other_user_id}}/webhook",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{other_user_id}}",
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/webhook",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/webhook",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/webhook?page-size=3&page-start-index=0",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/webhook?page-size=3&page-start-index=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"webhook"
							],
							"query": [
								{
									"key": "page-size",
									"value": "3"
								},
								{
									"key": "page-start-index",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/webhook/{{webhook_id}} - Not authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"tour\": false\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/webhook/{{webhook_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"webhook",
								"{{webhook_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{other_user_id}}/webhook/{{other_webhook_id}} - Not authorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"tour\": false\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{other_user_id}}/webhook/{{other_webhook_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{other_user_id}}",
								"webhook",
								"{{other_webhook_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/webhook/{{webhook_id}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"Tour must be set to false\"] = jsonData.webhook.data.tour === false;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"tour\": false\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/webhook/{{webhook_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"webhook",
								"{{webhook_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/webhook/{{webhook_id}} - Not authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"endpoint\": \"https://webhook-subscriber-endpoint.com\",\r\n    \"token\": \"123abc\",\r\n    \"user\": true,\r\n    \"tour\": true\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/webhook/{{webhook_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"webhook",
								"{{webhook_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{other_user_id}}/webhook/{{other_webhook_id}} - Not authorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"endpoint\": \"https://webhook-subscriber-endpoint.com\",\r\n    \"token\": \"123abc\",\r\n    \"user\": true,\r\n    \"tour\": true\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{other_user_id}}/webhook/{{other_webhook_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{other_user_id}}",
								"webhook",
								"{{other_webhook_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/webhook/{{webhook_id}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"tests[\"Tour must be set to true\"] = jsonData.webhook.data.tour === true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"endpoint\": \"https://webhook-subscriber-endpoint.com\",\r\n    \"token\": \"123abc\",\r\n    \"user\": true,\r\n    \"tour\": true\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/webhook/{{webhook_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"webhook",
								"{{webhook_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/webhook/{{webhook_id}} - Not authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/webhook/{{webhook_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"webhook",
								"{{webhook_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{other_user_id}}/webhook/{{other_webhook_id}} - Not authorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{other_user_id}}/webhook/{{other_webhook_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{other_user_id}}",
								"webhook",
								"{{other_webhook_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/webhook/{{webhook_id}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/webhook/{{webhook_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"webhook",
								"{{webhook_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}}/webhook/{{webhook_id}} - Not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}/webhook/{{webhook_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}",
								"webhook",
								"{{webhook_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Finish",
			"item": [
				{
					"name": "{{base_url}}/user/unregister - Not authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/user/unregister",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"unregister"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/unregister",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/user/unregister",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"unregister"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/unregister - Other user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token_other_user}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/user/unregister",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"unregister"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{base_url}}/user/{{user_id}} - Not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/user/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"{{user_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"",
					"pm.test(\"Content-Type is present\", function () {",
					"    pm.response.to.have.header(\"Content-Type\");",
					"});",
					"",
					"pm.test(\"Response must have a json body\", function () {",
					"    pm.response.to.be.withBody;",
					"    pm.response.to.be.json;",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "access_token",
			"value": "Initial value",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "Initial value",
			"type": "string"
		},
		{
			"key": "other_user_id",
			"value": "Initial value",
			"type": "string"
		},
		{
			"key": "tour_id",
			"value": "Initial value",
			"type": "string"
		},
		{
			"key": "other_tour_id",
			"value": "Initial value",
			"type": "string"
		},
		{
			"key": "access_token_other_user",
			"value": "Initial value",
			"type": "string"
		},
		{
			"key": "webhook_id",
			"value": "Initial value",
			"type": "string"
		},
		{
			"key": "other_webhook_id",
			"value": "Initial value",
			"type": "string"
		},
		{
			"key": "base_url",
			"value": "https://cscloud8-135.lnu.se/ski-tour-log/api/v1",
			"type": "string"
		}
	]
}